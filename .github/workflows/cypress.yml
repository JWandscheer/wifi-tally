# tests the hub on a variety of operating systems, NodeJS versions and browsers

name: cypress
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch (where cypress tests are pulled from)'
        required: true
        default: 'master'
      source:
        description: 'Source *.tgz (from S3 or releases)'
        required: true
env:
  CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  # @see https://github.com/cypress-io/github-action
  cypress:
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            prefix: linux
            node: 12
            browser: chrome
          - os: ubuntu-latest
            prefix: linux
            node: 14
            browser: chrome
          - os: macos-latest
            prefix: mac
            node: 14
            browser: chrome
          - os: windows-latest
            node: 12
            browser: edge
          - os: windows-latest
            node: 14
            browser: edge
    runs-on: "${{ matrix.os }}"
    steps:
      - # the source code is ONLY used to to get the cypress tests
        name: Checkout the source code
        uses: actions/checkout@v2
        with:
          ref: "${{ github.event.inputs.branch }}"
      - name: Install dependencies
        run: |
          python -m pip install requests
      - name: Use node.js ${{ matrix.node }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}
      - name: Download the artifact
        id: hub
        run: |
          npm install ${{ github.event.inputs.source }}
      - # this step also runs "npm ci" and takes care of caching
        name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          start: "./node_modules/.bin/vtally --with-test"
          wait-on: 'http://localhost:3000'
          record: true
          spec: "cypress/**/!(manual_)*.spec.ts"
          browser: ${{ matrix.browser }}
          tag: "node-${{ matrix.node }},bundle-test,${{ matrix.os }},${{ matrix.browser }}"
